- name: user
  hosts: user 
  become: yes 
  tasks:
    - name: Disabling the Current NodeJS and enabling NodeJS:20
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:20 -y

    - name: Installing NodeJS:20
      ansible.builtin.package:
        name: nodejs 
        state: present 

    - name: Creating roboshop user
      ansible.builtin.user:
        name: roboshop 

    - name: Creating /app directory 
      ansible.builtin.file:
        path: /app 
        state: directory

    - name: Downoloading the user.zip 
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/user.zip
        dest: /tmp 

    - name: Unzipping user.zip 
      ansible.builtin.unarchive:
        src: /tmp/user.zip 
        remote_src: yes 
        dest: /app 

    - name: Installing dependencies
      ansible.builtin.command: npm install 
      args:
        chdir: /app

    - name: Copying the user.service
      ansible.builtin.copy:
        src: user.service
        dest: /etc/systemd/system/user.service

    - name: Daemon reload 
      ansible.builtin.systemd_service:
        daemon_reload: true 

    - name: Copying MongoDB repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo
    
    - name: Installing mondodb shell 
      ansible.builtin.command: dnf install -y mongodb-mongosh
    
    - name: get the products count
      ansible.builtin.command:  mongosh --host mongodb.devopsprocloud.in --quiet --eval 'db =db.getSiblingDB("users");db.users.estimatedDocumentCount()'
      register: output 

    - name: Print the output 
      ansible.builtin.debug:
        msg: "Output is {{output}}"
    
    - name: Loading user data into Mongodb 
      ansible.builtin.shell: mongosh --host mongodb.devopsprocloud.in </app/schema/user.js
      when: output.stdout == "0" 
      # when: output.stdout != "0"

    - name: Enable and Starting user
      ansible.builtin.service:
        name: user
        enabled: yes
        state: started
